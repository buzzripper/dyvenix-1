//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.ComponentModel;
using System.Reflection;
using System.Data.Common;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;
using iVedix.DBP.ServiceApps.Projector.Common.DTOs;
using iVedix.DBP.ServiceApps.Projector.Common.DTOs.Assets;
using iVedix.DBP.ServiceApps.Projector.Common.DTOs.Iot;
using iVedix.DBP.ServiceApps.Projector.Common.DTOs.Reports;
using iVedix.DBP.ServiceApps.Projector.Common.DTOs.Alerts;
using iVedix.DBP.ServiceApps.Projector.Common.DTOs.CustomStorage;
using iVedix.DBP.ServiceApps.Assets.Common.Enums;

namespace iVedix.DBP.ServiceApps.Projector.Data
{

    public partial class ProjectorDbContext : DbContext
    {
        public ProjectorDbContext() :
            base()
        {
            OnCreated();
        }

        public ProjectorDbContext(DbContextOptions<ProjectorDbContext> options) :
            base(options)
        {
            OnCreated();
        }

        #region Properties

        public virtual DbSet<Asset> Asset { get; set; }

        public virtual DbSet<AssetSpec> AssetSpec { get; set; }

        public virtual DbSet<AssetSpecGroup> AssetSpecGroup { get; set; }

        public virtual DbSet<AssetSpecFormat> AssetSpecFormat { get; set; }

        public virtual DbSet<AssetSurrogate> AssetSurrogate { get; set; }

        public virtual DbSet<AssetAttrMaster> AssetAttrMaster { get; set; }

        public virtual DbSet<AssetAttr> AssetAttr { get; set; }

        public virtual DbSet<Location> Location { get; set; }

        public virtual DbSet<LocationGroup> LocationGroup { get; set; }

        public virtual DbSet<LocGroup> LocGroup { get; set; }

        public virtual DbSet<LocationType> LocationType { get; set; }

        public virtual DbSet<LocationSurrogate> LocationSurrogate { get; set; }

        public virtual DbSet<AssetStateHistory> AssetStateHistory { get; set; }

        public virtual DbSet<AssetStatusHistory> AssetStatusHistory { get; set; }

        public virtual DbSet<LocationAttr> LocationAttr { get; set; }

        public virtual DbSet<Area> Area { get; set; }

        public virtual DbSet<AreaLocation> AreaLocation { get; set; }

        public virtual DbSet<AssetState> AssetState { get; set; }

        public virtual DbSet<ActiveIotCommandLifecycle> ActiveIotCommandLifecycle { get; set; }

        public virtual DbSet<ReportSpec> ReportSpec { get; set; }

        public virtual DbSet<ReportSpecColumn> ReportSpecColumn { get; set; }

        public virtual DbSet<AreaLocationMap> AreaLocationMap { get; set; }

        public virtual DbSet<MapPoint> MapPoint { get; set; }

        public virtual DbSet<Report> Report { get; set; }

        public virtual DbSet<ReportColumn> ReportColumn { get; set; }

        public virtual DbSet<ReportFilter> ReportFilter { get; set; }

        public virtual DbSet<ReportFilterSet> ReportFilterSet { get; set; }

        public virtual DbSet<ReportSpecFilter> ReportSpecFilter { get; set; }

        public virtual DbSet<VendorAttr> VendorAttr { get; set; }

        public virtual DbSet<MaintenanceOrder> MaintenanceOrder { get; set; }

        public virtual DbSet<MaintenanceOrderItem> MaintenanceOrderItem { get; set; }

        public virtual DbSet<LocationTrigger> LocationTrigger { get; set; }

        public virtual DbSet<LocationTriggerAttr> LocationTriggerAttr { get; set; }

        public virtual DbSet<Reservation> Reservation { get; set; }

        public virtual DbSet<ReservationAssetId> ReservationAssetId { get; set; }

        public virtual DbSet<ReservationSpecAttrValue> ReservationSpecAttrValue { get; set; }

        public virtual DbSet<ReservationAttr> ReservationAttr { get; set; }

        public virtual DbSet<LocationTriggerSpec> LocationTriggerSpec { get; set; }

        public virtual DbSet<LocationTriggerSpecAttr> LocationTriggerSpecAttr { get; set; }

        public virtual DbSet<AssetMoveHistory> AssetMoveHistory { get; set; }

        public virtual DbSet<RaisedAlert> RaisedAlert { get; set; }

        public virtual DbSet<RaisedAlertData> RaisedAlertData { get; set; }

        public virtual DbSet<AlertTrigger> AlertTrigger { get; set; }

        public virtual DbSet<LocTriggerLocation> LocTriggerLocation { get; set; }

        public virtual DbSet<AssetTag> AssetTag { get; set; }

        public virtual DbSet<IotLocation> IotLocation { get; set; }

        public virtual DbSet<AssetFormat> AssetFormat { get; set; }

        public virtual DbSet<AssetLevels> AssetLevels { get; set; }

        public virtual DbSet<AssetAlertTrigger> AssetAlertTrigger { get; set; }

        public virtual DbSet<AssetAlertTriggerLocationId> AssetAlertTriggerLocationId { get; set; }

        public virtual DbSet<AssetAlertTriggerFormat> AssetAlertTriggerFormat { get; set; }

        public virtual DbSet<AssetAlertTriggerSpecification> AssetAlertTriggerSpecification { get; set; }

        public virtual DbSet<AssetOrder> AssetOrder { get; set; }

        public virtual DbSet<AssetTransfer> AssetTransfer { get; set; }

        public virtual DbSet<Customer> Customer { get; set; }

        public virtual DbSet<ChildAsset> ChildAsset { get; set; }

        public virtual DbSet<AssetGroupMaster> AssetGroupMaster { get; set; }

        public virtual DbSet<AssetGroup> AssetGroup { get; set; }

        public virtual DbSet<AssetConfiguration> AssetConfiguration { get; set; }

        public virtual DbSet<CustomStorageSchema> CustomStorageSchema { get; set; }

        public virtual DbSet<CustomStorageSchemaColumn> CustomStorageSchemaColumn { get; set; }

        public virtual DbSet<AssetStatusCorrelation> AssetStatusCorrelation { get; set; }

        public virtual DbSet<AssetStatusCorrelationState> AssetStatusCorrelationState { get; set; }

        public virtual DbSet<AssetCertificationHistory> AssetCertificationHistory { get; set; }

        #endregion

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            this.AssetMapping(modelBuilder);
            this.CustomizeAssetMapping(modelBuilder);

            this.AssetSpecMapping(modelBuilder);
            this.CustomizeAssetSpecMapping(modelBuilder);

            this.AssetSpecGroupMapping(modelBuilder);
            this.CustomizeAssetSpecGroupMapping(modelBuilder);

            this.AssetSpecFormatMapping(modelBuilder);
            this.CustomizeAssetSpecFormatMapping(modelBuilder);

            this.AssetSurrogateMapping(modelBuilder);
            this.CustomizeAssetSurrogateMapping(modelBuilder);

            this.AssetAttrMasterMapping(modelBuilder);
            this.CustomizeAssetAttrMasterMapping(modelBuilder);

            this.AssetAttrMapping(modelBuilder);
            this.CustomizeAssetAttrMapping(modelBuilder);

            this.LocationMapping(modelBuilder);
            this.CustomizeLocationMapping(modelBuilder);

            this.LocationGroupMapping(modelBuilder);
            this.CustomizeLocationGroupMapping(modelBuilder);

            this.LocGroupMapping(modelBuilder);
            this.CustomizeLocGroupMapping(modelBuilder);

            this.LocationTypeMapping(modelBuilder);
            this.CustomizeLocationTypeMapping(modelBuilder);

            this.LocationSurrogateMapping(modelBuilder);
            this.CustomizeLocationSurrogateMapping(modelBuilder);

            this.AssetStateHistoryMapping(modelBuilder);
            this.CustomizeAssetStateHistoryMapping(modelBuilder);

            this.AssetStatusHistoryMapping(modelBuilder);
            this.CustomizeAssetStatusHistoryMapping(modelBuilder);

            this.LocationAttrMapping(modelBuilder);
            this.CustomizeLocationAttrMapping(modelBuilder);

            this.AreaMapping(modelBuilder);
            this.CustomizeAreaMapping(modelBuilder);

            this.AreaLocationMapping(modelBuilder);
            this.CustomizeAreaLocationMapping(modelBuilder);

            this.AssetStateMapping(modelBuilder);
            this.CustomizeAssetStateMapping(modelBuilder);

            this.ActiveIotCommandLifecycleMapping(modelBuilder);
            this.CustomizeActiveIotCommandLifecycleMapping(modelBuilder);

            this.ReportSpecMapping(modelBuilder);
            this.CustomizeReportSpecMapping(modelBuilder);

            this.ReportSpecColumnMapping(modelBuilder);
            this.CustomizeReportSpecColumnMapping(modelBuilder);

            this.AreaLocationMapMapping(modelBuilder);
            this.CustomizeAreaLocationMapMapping(modelBuilder);

            this.MapPointMapping(modelBuilder);
            this.CustomizeMapPointMapping(modelBuilder);

            this.ReportMapping(modelBuilder);
            this.CustomizeReportMapping(modelBuilder);

            this.ReportColumnMapping(modelBuilder);
            this.CustomizeReportColumnMapping(modelBuilder);

            this.ReportFilterMapping(modelBuilder);
            this.CustomizeReportFilterMapping(modelBuilder);

            this.ReportFilterSetMapping(modelBuilder);
            this.CustomizeReportFilterSetMapping(modelBuilder);

            this.ReportSpecFilterMapping(modelBuilder);
            this.CustomizeReportSpecFilterMapping(modelBuilder);

            this.VendorAttrMapping(modelBuilder);
            this.CustomizeVendorAttrMapping(modelBuilder);

            this.MaintenanceOrderMapping(modelBuilder);
            this.CustomizeMaintenanceOrderMapping(modelBuilder);

            this.MaintenanceOrderItemMapping(modelBuilder);
            this.CustomizeMaintenanceOrderItemMapping(modelBuilder);

            this.LocationTriggerMapping(modelBuilder);
            this.CustomizeLocationTriggerMapping(modelBuilder);

            this.LocationTriggerAttrMapping(modelBuilder);
            this.CustomizeLocationTriggerAttrMapping(modelBuilder);

            this.ReservationMapping(modelBuilder);
            this.CustomizeReservationMapping(modelBuilder);

            this.ReservationAssetIdMapping(modelBuilder);
            this.CustomizeReservationAssetIdMapping(modelBuilder);

            this.ReservationSpecAttrValueMapping(modelBuilder);
            this.CustomizeReservationSpecAttrValueMapping(modelBuilder);

            this.ReservationAttrMapping(modelBuilder);
            this.CustomizeReservationAttrMapping(modelBuilder);

            this.LocationTriggerSpecMapping(modelBuilder);
            this.CustomizeLocationTriggerSpecMapping(modelBuilder);

            this.LocationTriggerSpecAttrMapping(modelBuilder);
            this.CustomizeLocationTriggerSpecAttrMapping(modelBuilder);

            this.AssetMoveHistoryMapping(modelBuilder);
            this.CustomizeAssetMoveHistoryMapping(modelBuilder);

            this.RaisedAlertMapping(modelBuilder);
            this.CustomizeRaisedAlertMapping(modelBuilder);

            this.RaisedAlertDataMapping(modelBuilder);
            this.CustomizeRaisedAlertDataMapping(modelBuilder);

            this.AlertTriggerMapping(modelBuilder);
            this.CustomizeAlertTriggerMapping(modelBuilder);

            this.LocTriggerLocationMapping(modelBuilder);
            this.CustomizeLocTriggerLocationMapping(modelBuilder);

            this.AssetTagMapping(modelBuilder);
            this.CustomizeAssetTagMapping(modelBuilder);

            this.IotLocationMapping(modelBuilder);
            this.CustomizeIotLocationMapping(modelBuilder);

            this.AssetFormatMapping(modelBuilder);
            this.CustomizeAssetFormatMapping(modelBuilder);

            this.AssetLevelsMapping(modelBuilder);
            this.CustomizeAssetLevelsMapping(modelBuilder);

            this.AssetAlertTriggerMapping(modelBuilder);
            this.CustomizeAssetAlertTriggerMapping(modelBuilder);

            this.AssetAlertTriggerLocationIdMapping(modelBuilder);
            this.CustomizeAssetAlertTriggerLocationIdMapping(modelBuilder);

            this.AssetAlertTriggerFormatMapping(modelBuilder);
            this.CustomizeAssetAlertTriggerFormatMapping(modelBuilder);

            this.AssetAlertTriggerSpecificationMapping(modelBuilder);
            this.CustomizeAssetAlertTriggerSpecificationMapping(modelBuilder);

            this.AssetOrderMapping(modelBuilder);
            this.CustomizeAssetOrderMapping(modelBuilder);

            this.AssetTransferMapping(modelBuilder);
            this.CustomizeAssetTransferMapping(modelBuilder);

            this.CustomerMapping(modelBuilder);
            this.CustomizeCustomerMapping(modelBuilder);

            this.ChildAssetMapping(modelBuilder);
            this.CustomizeChildAssetMapping(modelBuilder);

            this.AssetGroupMasterMapping(modelBuilder);
            this.CustomizeAssetGroupMasterMapping(modelBuilder);

            this.AssetGroupMapping(modelBuilder);
            this.CustomizeAssetGroupMapping(modelBuilder);

            this.AssetConfigurationMapping(modelBuilder);
            this.CustomizeAssetConfigurationMapping(modelBuilder);

            this.CustomStorageSchemaMapping(modelBuilder);
            this.CustomizeCustomStorageSchemaMapping(modelBuilder);

            this.CustomStorageSchemaColumnMapping(modelBuilder);
            this.CustomizeCustomStorageSchemaColumnMapping(modelBuilder);

            this.AssetStatusCorrelationMapping(modelBuilder);
            this.CustomizeAssetStatusCorrelationMapping(modelBuilder);

            this.AssetStatusCorrelationStateMapping(modelBuilder);
            this.CustomizeAssetStatusCorrelationStateMapping(modelBuilder);

            this.AssetCertificationHistoryMapping(modelBuilder);
            this.CustomizeAssetCertificationHistoryMapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);
        }
    
        #region Asset Mapping

        private void AssetMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Asset>().ToTable(@"Asset");
            modelBuilder.Entity<Asset>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.ParentId).HasColumnName(@"ParentId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<bool>(x => x.IsParent).HasColumnName(@"IsParent").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<string>(x => x.Name).HasColumnName(@"Name").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Asset>().Property<string>(x => x.Lot).HasColumnName(@"Lot").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.ConfigurationId).HasColumnName(@"ConfigurationId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.ConfigurationName).HasColumnName(@"ConfigurationName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.FormatId).HasColumnName(@"FormatId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.FormatName).HasColumnName(@"FormatName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.AssetSpecId).HasColumnName(@"AssetSpecId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.AssetSpecName).HasColumnName(@"AssetSpecName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.Status>>(x => x.AssetStatus).HasColumnName(@"AssetStatus").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<string>(x => x.AssetStateName).HasColumnName(@"AssetStateName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.AssetStateDescription).HasColumnName(@"AssetStateDescription").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<iVedix.DBP.ServiceApps.Assets.Common.Enums.UsageType>(x => x.UsageType).HasColumnName(@"UsageType").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<int>>(x => x.UsageCount).HasColumnName(@"UsageCount").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<bool>(x => x.EnforceUsage).HasColumnName(@"EnforceUsage").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<int>>(x => x.UsageLimit).HasColumnName(@"UsageLimit").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.LastMaintenanceDate).HasColumnName(@"LastMaintenanceDate").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.NextMaintenanceDate).HasColumnName(@"NextMaintenanceDate").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<string>(x => x.AreaId).HasColumnName(@"AreaId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.AreaName).HasColumnName(@"AreaName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.AreaLocationId).HasColumnName(@"AreaLocationId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.AreaLocationName).HasColumnName(@"AreaLocationName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.LocationId).HasColumnName(@"LocationId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.LocationName).HasColumnName(@"LocationName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.Department).HasColumnName(@"Department").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.AssetClass>>(x => x.Class).HasColumnName(@"Class").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<double>>(x => x.MaterialPct).HasColumnName(@"MaterialPct").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<bool>(x => x.TrackCertification).HasColumnName(@"TrackCertification").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<int>>(x => x.CertificationLeadTimeDays).HasColumnName(@"CertificationLeadTimeDays").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.CurrCertificationDateUTC).HasColumnName(@"CurrCertificationDateUTC").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.CurrCertExpirationDateUTC).HasColumnName(@"CurrCertExpirationDateUTC").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<string>(x => x.CurrCertificationSourceId).HasColumnName(@"CurrCertificationSourceId").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.CurrAdjCertExpirationDateUTC).HasColumnName(@"CurrAdjCertExpirationDateUTC").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.PrevCertificationDateUTC).HasColumnName(@"PrevCertificationDateUTC").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.PrevCertExpirationDateUTC).HasColumnName(@"PrevCertExpirationDateUTC").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<bool>(x => x.UseScrap).HasColumnName(@"UseScrap").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<int>>(x => x.ScrapLeadTime).HasColumnName(@"ScrapLeadTime").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.ScrapDate).HasColumnName(@"ScrapDate").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.AdjScrapDate).HasColumnName(@"AdjScrapDate").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<bool>(x => x.Bonded).HasColumnName(@"Bonded").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<string>(x => x.OwnerCustId).HasColumnName(@"OwnerCustId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.OwnerCustNo).HasColumnName(@"OwnerCustNo").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.OwnerCustName).HasColumnName(@"OwnerCustName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.CountryOfOrigin).HasColumnName(@"CountryOfOrigin").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<bool>(x => x.Blocked).HasColumnName(@"Blocked").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<string>(x => x.Manufacturer).HasColumnName(@"Manufacturer").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.ManufactureDate).HasColumnName(@"ManufactureDate").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.PurchaseDate).HasColumnName(@"PurchaseDate").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.LotControlled>>(x => x.LotControlled).HasColumnName(@"LotControlled").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<bool>(x => x.AllowRotation).HasColumnName(@"AllowRotation").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.LengthUnits>>(x => x.LengthUnit).HasColumnName(@"LengthUnit").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<double>>(x => x.Length).HasColumnName(@"Length").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<double>>(x => x.Width).HasColumnName(@"Width").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<double>>(x => x.Height).HasColumnName(@"Height").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.MassUnits>>(x => x.WeightUnit).HasColumnName(@"WeightUnit").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<double>>(x => x.Weight).HasColumnName(@"Weight").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<bool>(x => x.Hazardous).HasColumnName(@"Hazardous").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<bool>(x => x.Controlled).HasColumnName(@"Controlled").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<bool>(x => x.Liquid).HasColumnName(@"Liquid").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.DateTimeReceived).HasColumnName(@"DateTimeReceived").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<double>>(x => x.ClimateMin).HasColumnName(@"ClimateMin").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<double>>(x => x.ClimateMax).HasColumnName(@"ClimateMax").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.TemperatureUnits>>(x => x.ClimateUnits).HasColumnName(@"ClimateUnits").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<string>(x => x.ReceiverSourceId).HasColumnName(@"ReceiverSourceId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.Aux1).HasColumnName(@"Aux1").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Asset>().Property<string>(x => x.Aux2).HasColumnName(@"Aux2").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Asset>().Property<string>(x => x.Aux3).HasColumnName(@"Aux3").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Asset>().Property<string>(x => x.Aux4).HasColumnName(@"Aux4").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Asset>().Property<string>(x => x.Aux5).HasColumnName(@"Aux5").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.DateCreated).HasColumnName(@"DateCreated").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.LastMoveDate).HasColumnName(@"LastMoveDate").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.LastStatusChangeDate).HasColumnName(@"LastStatusChangeDate").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<System.Nullable<System.DateTime>>(x => x.LastStateChangeDate).HasColumnName(@"LastStateChangeDate").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<string>(x => x.AssignedToCustomerId).HasColumnName(@"AssignedToCustomerId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.AssignedToCustNo).HasColumnName(@"AssignedToCustNo").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.AssignedToCustName).HasColumnName(@"AssignedToCustName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.AllocationId).HasColumnName(@"AllocationId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.AllocationType>>(x => x.AllocType).HasColumnName(@"AllocType").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<string>(x => x.AllocSourceId).HasColumnName(@"AllocSourceId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.Status>>(x => x.AllocTargetStatus).HasColumnName(@"AllocTargetStatus").ValueGeneratedNever();
            modelBuilder.Entity<Asset>().Property<string>(x => x.AllocTargetLocationId).HasColumnName(@"AllocTargetLocationId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.AllocTargetLocationName).HasColumnName(@"AllocTargetLocationName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.AllocAssetOrderId).HasColumnName(@"AllocAssetOrderId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().Property<string>(x => x.AllocTargetState).HasColumnName(@"AllocTargetState").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Asset>().HasKey(@"Id");
            modelBuilder.Entity<Asset>().HasIndex(@"Name").IsUnique(false);
            modelBuilder.Entity<Asset>().HasIndex(@"ConfigurationName").IsUnique(false);
            modelBuilder.Entity<Asset>().HasIndex(@"FormatName").IsUnique(false);
            modelBuilder.Entity<Asset>().HasIndex(@"AssetSpecName").IsUnique(false);
            modelBuilder.Entity<Asset>().HasIndex(@"AssetStateName").IsUnique(false);
        }
	
        partial void CustomizeAssetMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetSpec Mapping

        private void AssetSpecMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetSpec>().ToTable(@"AssetSpec");
            modelBuilder.Entity<AssetSpec>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetSpec>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetSpec>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.LotControlled>>(x => x.LotControlled).HasColumnName(@"LotControlled").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<bool>(x => x.AllowRotation).HasColumnName(@"AllowRotation").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.LengthUnits>>(x => x.LengthUnit).HasColumnName(@"LengthUnit").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<double>>(x => x.Length).HasColumnName(@"Length").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<double>>(x => x.Width).HasColumnName(@"Width").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<double>>(x => x.Height).HasColumnName(@"Height").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.MassUnits>>(x => x.WeightUnit).HasColumnName(@"WeightUnit").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<double>>(x => x.Weight).HasColumnName(@"Weight").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<bool>(x => x.Hazardous).HasColumnName(@"Hazardous").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<bool>(x => x.Controlled).HasColumnName(@"Controlled").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<bool>(x => x.Liquid).HasColumnName(@"Liquid").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<double>>(x => x.ClimateMin).HasColumnName(@"ClimateMin").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<double>>(x => x.ClimateMax).HasColumnName(@"ClimateMax").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.TemperatureUnits>>(x => x.ClimateTempUnits).HasColumnName(@"ClimateTempUnits").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<bool>(x => x.TrackCertificationDefault).HasColumnName(@"TrackCertificationDefault").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<int>>(x => x.CertificationLeadTimeDaysDefault).HasColumnName(@"CertificationLeadTimeDaysDefault").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<bool>(x => x.UseScrapDefault).HasColumnName(@"UseScrapDefault").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<int>>(x => x.ScrapDurationDays).HasColumnName(@"ScrapDurationDays").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.UsageType>>(x => x.UsageTypeDefault).HasColumnName(@"UsageTypeDefault").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.AssetClass>>(x => x.ClassDefault).HasColumnName(@"ClassDefault").ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<string>(x => x.DefaultFormatId).HasColumnName(@"DefaultFormatId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetSpec>().Property<bool>(x => x.DefaultEnforceUsage).HasColumnName(@"DefaultEnforceUsage").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().Property<int>(x => x.DefaultUsageLimit).HasColumnName(@"DefaultUsageLimit").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetSpec>().HasKey(@"Id");
            modelBuilder.Entity<AssetSpec>().HasIndex(@"Name").IsUnique(false);
        }
	
        partial void CustomizeAssetSpecMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetSpecGroup Mapping

        private void AssetSpecGroupMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetSpecGroup>().ToTable(@"AssetSpecGroup");
            modelBuilder.Entity<AssetSpecGroup>().Property<string>(x => x.AssetSpecId).HasColumnName(@"AssetSpecId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetSpecGroup>().Property<string>(x => x.GroupId).HasColumnName(@"GroupId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetSpecGroup>().Property<string>(x => x.GroupName).HasColumnName(@"GroupName").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetSpecGroup>().HasKey(@"AssetSpecId", @"GroupId");
            modelBuilder.Entity<AssetSpecGroup>().HasIndex(@"AssetSpecId").IsUnique(false);
        }
	
        partial void CustomizeAssetSpecGroupMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetSpecFormat Mapping

        private void AssetSpecFormatMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetSpecFormat>().ToTable(@"AssetSpecFormat");
            modelBuilder.Entity<AssetSpecFormat>().Property<string>(x => x.AssetSpecId).HasColumnName(@"AssetSpecId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetSpecFormat>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetSpecFormat>().HasKey(@"AssetSpecId", @"Name");
            modelBuilder.Entity<AssetSpecFormat>().HasIndex(@"AssetSpecId").IsUnique(false);
        }
	
        partial void CustomizeAssetSpecFormatMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetSurrogate Mapping

        private void AssetSurrogateMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetSurrogate>().ToTable(@"AssetSurrogate");
            modelBuilder.Entity<AssetSurrogate>().Property<string>(x => x.AssetId).HasColumnName(@"AssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetSurrogate>().Property<string>(x => x.SurrogateId).HasColumnName(@"SurrogateId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetSurrogate>().HasKey(@"AssetId", @"SurrogateId");
        }
	
        partial void CustomizeAssetSurrogateMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetAttrMaster Mapping

        private void AssetAttrMasterMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetAttrMaster>().ToTable(@"AssetAttrMaster");
            modelBuilder.Entity<AssetAttrMaster>().Property<string>(x => x.AssetSpecId).HasColumnName(@"AssetSpecId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAttrMaster>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAttrMaster>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.AllowedValueType>>(x => x.Type).HasColumnName(@"Type").ValueGeneratedNever();
            modelBuilder.Entity<AssetAttrMaster>().Property<string>(x => x.AllowableValues).HasColumnName(@"AllowableValues").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<AssetAttrMaster>().Property<bool>(x => x.Required).HasColumnName(@"Required").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetAttrMaster>().HasKey(@"AssetSpecId", @"Name");
        }
	
        partial void CustomizeAssetAttrMasterMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetAttr Mapping

        private void AssetAttrMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetAttr>().ToTable(@"AssetAttr");
            modelBuilder.Entity<AssetAttr>().Property<string>(x => x.AssetId).HasColumnName(@"AssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAttr>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAttr>().Property<string>(x => x.Value).HasColumnName(@"Value").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAttr>().HasKey(@"AssetId", @"Name");
        }
	
        partial void CustomizeAssetAttrMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Location Mapping

        private void LocationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Location>().ToTable(@"Location");
            modelBuilder.Entity<Location>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Location>().Property<string>(x => x.Name).HasColumnName(@"Name").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Location>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Location>().Property<string>(x => x.LocationTypeId).HasColumnName(@"LocationTypeId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Location>().Property<string>(x => x.LocationTypeName).HasColumnName(@"LocationTypeName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Location>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.LengthUnits>>(x => x.LengthUnits).HasColumnName(@"LengthUnits").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<double>>(x => x.Height).HasColumnName(@"Height").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<double>>(x => x.Width).HasColumnName(@"Width").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<double>>(x => x.Length).HasColumnName(@"Length").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<double>>(x => x.Weight).HasColumnName(@"Weight").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.MassUnits>>(x => x.WeightUnits).HasColumnName(@"WeightUnits").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<double>>(x => x.WeightUtilization).HasColumnName(@"WeightUtilization").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<double>>(x => x.CubeUtilization).HasColumnName(@"CubeUtilization").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<bool>(x => x.Blocked).HasColumnName(@"Blocked").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<bool>(x => x.Active).HasColumnName(@"Active").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<string>(x => x.AreaId).HasColumnName(@"AreaId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Location>().Property<string>(x => x.AreaName).HasColumnName(@"AreaName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Location>().Property<string>(x => x.AreaLocationId).HasColumnName(@"AreaLocationId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Location>().Property<string>(x => x.AreaLocationName).HasColumnName(@"AreaLocationName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Location>().Property<System.Nullable<double>>(x => x.ClimateMin).HasColumnName(@"ClimateMin").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<double>>(x => x.ClimateMax).HasColumnName(@"ClimateMax").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.TemperatureUnits>>(x => x.ClimateUnits).HasColumnName(@"ClimateUnits").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<bool>(x => x.EnforceCapacity).HasColumnName(@"EnforceCapacity").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<int>>(x => x.Qty).HasColumnName(@"Qty").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<System.DateTime>>(x => x.DateCreated).HasColumnName(@"DateCreated").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<int>>(x => x.UnitUtilization).HasColumnName(@"UnitUtilization").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<double>>(x => x.CubeAllocation).HasColumnName(@"CubeAllocation").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<int>>(x => x.UnitAllocation).HasColumnName(@"UnitAllocation").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<bool>(x => x.OverCapacity).HasColumnName(@"OverCapacity").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<double>>(x => x.CubeUtilizationOverage).HasColumnName(@"CubeUtilizationOverage").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<int>>(x => x.UnitUtilizationOverage).HasColumnName(@"UnitUtilizationOverage").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<double>>(x => x.WeightAllocation).HasColumnName(@"WeightAllocation").ValueGeneratedNever();
            modelBuilder.Entity<Location>().Property<System.Nullable<double>>(x => x.WeightUtilizationOverage).HasColumnName(@"WeightUtilizationOverage").ValueGeneratedNever();
            modelBuilder.Entity<Location>().HasKey(@"Id");
            modelBuilder.Entity<Location>().HasIndex(@"LocationTypeName").IsUnique(false);
        }
	
        partial void CustomizeLocationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LocationGroup Mapping

        private void LocationGroupMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LocationGroup>().ToTable(@"LocationGroup");
            modelBuilder.Entity<LocationGroup>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationGroup>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationGroup>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationGroup>().HasKey(@"Id");
        }
	
        partial void CustomizeLocationGroupMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LocGroup Mapping

        private void LocGroupMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LocGroup>().ToTable(@"LocGroup");
            modelBuilder.Entity<LocGroup>().Property<string>(x => x.LocationId).HasColumnName(@"LocationId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocGroup>().Property<string>(x => x.LocationGroupId).HasColumnName(@"LocationGroupId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocGroup>().HasKey(@"LocationId", @"LocationGroupId");
        }
	
        partial void CustomizeLocGroupMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LocationType Mapping

        private void LocationTypeMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LocationType>().ToTable(@"LocationType");
            modelBuilder.Entity<LocationType>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationType>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationType>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationType>().HasKey(@"Id");
        }
	
        partial void CustomizeLocationTypeMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LocationSurrogate Mapping

        private void LocationSurrogateMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LocationSurrogate>().ToTable(@"LocationSurrogate");
            modelBuilder.Entity<LocationSurrogate>().Property<string>(x => x.LocationId).HasColumnName(@"LocationId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationSurrogate>().Property<string>(x => x.SurrogateId).HasColumnName(@"SurrogateId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationSurrogate>().HasKey(@"LocationId", @"SurrogateId");
        }
	
        partial void CustomizeLocationSurrogateMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetStateHistory Mapping

        private void AssetStateHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetStateHistory>().ToTable(@"AssetStateHistory");
            modelBuilder.Entity<AssetStateHistory>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStateHistory>().Property<string>(x => x.AssetId).HasColumnName(@"AssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStateHistory>().Property<System.DateTime>(x => x.ActivityTimestamp).HasColumnName(@"ActivityTimestamp").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetStateHistory>().Property<string>(x => x.State).HasColumnName(@"State").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStateHistory>().Property<string>(x => x.Source).HasColumnName(@"Source").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStateHistory>().Property<string>(x => x.User).HasColumnName(@"User").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStateHistory>().HasKey(@"Id");
            modelBuilder.Entity<AssetStateHistory>().HasIndex(@"AssetId").IsUnique(false);
            modelBuilder.Entity<AssetStateHistory>().HasIndex(@"ActivityTimestamp").IsUnique(false);
            modelBuilder.Entity<AssetStateHistory>().HasIndex(@"Source").IsUnique(false);
        }
	
        partial void CustomizeAssetStateHistoryMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetStatusHistory Mapping

        private void AssetStatusHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetStatusHistory>().ToTable(@"AssetStatusHistory");
            modelBuilder.Entity<AssetStatusHistory>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStatusHistory>().Property<string>(x => x.AssetId).HasColumnName(@"AssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStatusHistory>().Property<System.DateTime>(x => x.ActivityTimestamp).HasColumnName(@"ActivityTimestamp").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetStatusHistory>().Property<string>(x => x.Status).HasColumnName(@"Status").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStatusHistory>().Property<string>(x => x.Source).HasColumnName(@"Source").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStatusHistory>().Property<string>(x => x.User).HasColumnName(@"User").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStatusHistory>().HasKey(@"Id");
            modelBuilder.Entity<AssetStatusHistory>().HasIndex(@"AssetId").IsUnique(false);
            modelBuilder.Entity<AssetStatusHistory>().HasIndex(@"ActivityTimestamp").IsUnique(false);
        }
	
        partial void CustomizeAssetStatusHistoryMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LocationAttr Mapping

        private void LocationAttrMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LocationAttr>().ToTable(@"LocationAttr");
            modelBuilder.Entity<LocationAttr>().Property<string>(x => x.LocationId).HasColumnName(@"LocationId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationAttr>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationAttr>().Property<string>(x => x.Value).HasColumnName(@"Value").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationAttr>().HasKey(@"LocationId", @"Name");
        }
	
        partial void CustomizeLocationAttrMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Area Mapping

        private void AreaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Area>().ToTable(@"Area");
            modelBuilder.Entity<Area>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Area>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Area>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Area>().HasKey(@"Id");
        }
	
        partial void CustomizeAreaMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AreaLocation Mapping

        private void AreaLocationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AreaLocation>().ToTable(@"AreaLocation");
            modelBuilder.Entity<AreaLocation>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AreaLocation>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AreaLocation>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AreaLocation>().Property<string>(x => x.AreaId).HasColumnName(@"AreaId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AreaLocation>().Property<string>(x => x.AreaName).HasColumnName(@"AreaName").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AreaLocation>().HasKey(@"Id");
        }
	
        partial void CustomizeAreaLocationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetState Mapping

        private void AssetStateMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetState>().ToTable(@"AssetState");
            modelBuilder.Entity<AssetState>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetState>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetState>().HasKey(@"Name");
        }
	
        partial void CustomizeAssetStateMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ActiveIotCommandLifecycle Mapping

        private void ActiveIotCommandLifecycleMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ActiveIotCommandLifecycle>().ToTable(@"ActiveIotCommandLifecycle");
            modelBuilder.Entity<ActiveIotCommandLifecycle>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ActiveIotCommandLifecycle>().Property<string>(x => x.CommandId).HasColumnName(@"CommandId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ActiveIotCommandLifecycle>().Property<string>(x => x.CommandName).HasColumnName(@"CommandName").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ActiveIotCommandLifecycle>().HasKey(@"Id");
        }
	
        partial void CustomizeActiveIotCommandLifecycleMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ReportSpec Mapping

        private void ReportSpecMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ReportSpec>().ToTable(@"ReportSpec");
            modelBuilder.Entity<ReportSpec>().Property<int>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ReportSpec>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReportSpec>().Property<string>(x => x.Description).HasColumnName(@"Description").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReportSpec>().HasKey(@"Id");
        }
	
        partial void CustomizeReportSpecMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ReportSpecColumn Mapping

        private void ReportSpecColumnMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ReportSpecColumn>().ToTable(@"ReportSpecColumn");
            modelBuilder.Entity<ReportSpecColumn>().Property<int>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<ReportSpecColumn>().Property<int>(x => x.ReportSpecId).HasColumnName(@"ReportSpecId").ValueGeneratedNever();
            modelBuilder.Entity<ReportSpecColumn>().Property<string>(x => x.FieldName).HasColumnName(@"FieldName").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReportSpecColumn>().Property<string>(x => x.Label).HasColumnName(@"Label").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReportSpecColumn>().HasKey(@"Id");
        }
	
        partial void CustomizeReportSpecColumnMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AreaLocationMap Mapping

        private void AreaLocationMapMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AreaLocationMap>().ToTable(@"AreaLocationMap");
            modelBuilder.Entity<AreaLocationMap>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AreaLocationMap>().Property<string>(x => x.AreaLocationId).HasColumnName(@"AreaLocationId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AreaLocationMap>().Property<string>(x => x.Filename).HasColumnName(@"Filename").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<AreaLocationMap>().HasKey(@"Id");
        }
	
        partial void CustomizeAreaLocationMapMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region MapPoint Mapping

        private void MapPointMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<MapPoint>().ToTable(@"MapPoint");
            modelBuilder.Entity<MapPoint>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<MapPoint>().Property<string>(x => x.AreaLocationMapId).HasColumnName(@"AreaLocationMapId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<MapPoint>().Property<string>(x => x.LocationId).HasColumnName(@"LocationId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<MapPoint>().Property<double>(x => x.X).HasColumnName(@"X").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<MapPoint>().Property<double>(x => x.Y).HasColumnName(@"Y").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<MapPoint>().HasKey(@"Id");
        }
	
        partial void CustomizeMapPointMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Report Mapping

        private void ReportMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Report>().ToTable(@"Report");
            modelBuilder.Entity<Report>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Report>().Property<int>(x => x.ReportSpecId).HasColumnName(@"ReportSpecId").ValueGeneratedNever();
            modelBuilder.Entity<Report>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Report>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Report>().Property<bool>(x => x.IsStandard).HasColumnName(@"IsStandard").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Report>().HasKey(@"Id");
        }
	
        partial void CustomizeReportMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ReportColumn Mapping

        private void ReportColumnMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ReportColumn>().ToTable(@"ReportColumn");
            modelBuilder.Entity<ReportColumn>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReportColumn>().Property<string>(x => x.ReportId).HasColumnName(@"ReportId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReportColumn>().Property<int>(x => x.ReportSpecColumnId).HasColumnName(@"ReportSpecColumnId").ValueGeneratedNever();
            modelBuilder.Entity<ReportColumn>().Property<int>(x => x.ColOrder).HasColumnName(@"ColOrder").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ReportColumn>().Property<int>(x => x.WidthPct).HasColumnName(@"WidthPct").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ReportColumn>().HasKey(@"Id");
        }
	
        partial void CustomizeReportColumnMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ReportFilter Mapping

        private void ReportFilterMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ReportFilter>().ToTable(@"ReportFilter");
            modelBuilder.Entity<ReportFilter>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReportFilter>().Property<string>(x => x.ReportFilterSetId).HasColumnName(@"ReportFilterSetId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReportFilter>().Property<int>(x => x.ReportSpecFilterId).HasColumnName(@"ReportSpecFilterId").ValueGeneratedNever();
            modelBuilder.Entity<ReportFilter>().Property<string>(x => x.TextValue).HasColumnName(@"TextValue").ValueGeneratedNever().HasMaxLength(1000);
            modelBuilder.Entity<ReportFilter>().Property<System.Nullable<int>>(x => x.IntValue).HasColumnName(@"IntValue").ValueGeneratedNever();
            modelBuilder.Entity<ReportFilter>().Property<System.Nullable<double>>(x => x.DoubleValue).HasColumnName(@"DoubleValue").ValueGeneratedNever();
            modelBuilder.Entity<ReportFilter>().Property<System.Nullable<System.DateTime>>(x => x.DateTimeValue).HasColumnName(@"DateTimeValue").ValueGeneratedNever();
            modelBuilder.Entity<ReportFilter>().Property<System.Nullable<bool>>(x => x.BoolValue).HasColumnName(@"BoolValue").ValueGeneratedNever();
            modelBuilder.Entity<ReportFilter>().Property<System.Nullable<iVedix.DBP.ServiceApps.Projector.Common.DTOs.Reports.DateRangeValues>>(x => x.DateRange).HasColumnName(@"DateRange").ValueGeneratedNever();
            modelBuilder.Entity<ReportFilter>().Property<System.Nullable<System.DateTime>>(x => x.FromDate).HasColumnName(@"FromDate").ValueGeneratedNever();
            modelBuilder.Entity<ReportFilter>().Property<System.Nullable<System.DateTime>>(x => x.ToDate).HasColumnName(@"ToDate").ValueGeneratedNever();
            modelBuilder.Entity<ReportFilter>().Property<int>(x => x.ColOrder).HasColumnName(@"ColOrder").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ReportFilter>().HasKey(@"Id");
        }
	
        partial void CustomizeReportFilterMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ReportFilterSet Mapping

        private void ReportFilterSetMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ReportFilterSet>().ToTable(@"ReportFilterSet");
            modelBuilder.Entity<ReportFilterSet>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReportFilterSet>().Property<bool>(x => x.ShowExpanded).HasColumnName(@"ShowExpanded").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ReportFilterSet>().HasKey(@"Id");
        }
	
        partial void CustomizeReportFilterSetMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ReportSpecFilter Mapping

        private void ReportSpecFilterMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ReportSpecFilter>().ToTable(@"ReportSpecFilter");
            modelBuilder.Entity<ReportSpecFilter>().Property<int>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ReportSpecFilter>().Property<int>(x => x.ReportSpecId).HasColumnName(@"ReportSpecId").ValueGeneratedNever();
            modelBuilder.Entity<ReportSpecFilter>().Property<iVedix.DBP.ServiceApps.Projector.Common.DTOs.Reports.ReportFilterType>(x => x.FilterType).HasColumnName(@"FilterType").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ReportSpecFilter>().Property<string>(x => x.Label).HasColumnName(@"Label").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReportSpecFilter>().Property<System.Nullable<iVedix.DBP.ServiceApps.Projector.Common.DTOs.Reports.FilterSelectSource>>(x => x.SelectSource).HasColumnName(@"SelectSource").ValueGeneratedNever();
            modelBuilder.Entity<ReportSpecFilter>().Property<bool>(x => x.Hidden).HasColumnName(@"Hidden").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ReportSpecFilter>().Property<bool>(x => x.Unclearable).HasColumnName(@"Unclearable").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ReportSpecFilter>().Property<bool>(x => x.Fixed).HasColumnName(@"Fixed").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<ReportSpecFilter>().HasKey(@"Id");
        }
	
        partial void CustomizeReportSpecFilterMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region VendorAttr Mapping

        private void VendorAttrMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<VendorAttr>().ToTable(@"VendorAttr");
            modelBuilder.Entity<VendorAttr>().Property<string>(x => x.AssetId).HasColumnName(@"AssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VendorAttr>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VendorAttr>().Property<string>(x => x.Value).HasColumnName(@"Value").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<VendorAttr>().HasKey(@"AssetId", @"Name");
        }
	
        partial void CustomizeVendorAttrMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region MaintenanceOrder Mapping

        private void MaintenanceOrderMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<MaintenanceOrder>().ToTable(@"MaintenanceOrder");
            modelBuilder.Entity<MaintenanceOrder>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<MaintenanceOrder>().Property<string>(x => x.AssetId).HasColumnName(@"AssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<MaintenanceOrder>().Property<string>(x => x.ExtOrderNumber).HasColumnName(@"ExtOrderNumber").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<MaintenanceOrder>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<MaintenanceOrder>().Property<System.Nullable<double>>(x => x.TotalCost).HasColumnName(@"TotalCost").ValueGeneratedNever();
            modelBuilder.Entity<MaintenanceOrder>().Property<System.Nullable<int>>(x => x.TotalMaintMins).HasColumnName(@"TotalMaintMins").ValueGeneratedNever();
            modelBuilder.Entity<MaintenanceOrder>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.Status>>(x => x.CompletedAssetStatus).HasColumnName(@"CompletedAssetStatus").ValueGeneratedNever();
            modelBuilder.Entity<MaintenanceOrder>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.Status>>(x => x.CurrentAssetStatus).HasColumnName(@"CurrentAssetStatus").ValueGeneratedNever();
            modelBuilder.Entity<MaintenanceOrder>().Property<System.Nullable<System.DateTime>>(x => x.StartTime).HasColumnName(@"StartTime").ValueGeneratedNever();
            modelBuilder.Entity<MaintenanceOrder>().Property<System.Nullable<System.DateTime>>(x => x.CompletedTime).HasColumnName(@"CompletedTime").ValueGeneratedNever();
            modelBuilder.Entity<MaintenanceOrder>().HasKey(@"Id");
        }
	
        partial void CustomizeMaintenanceOrderMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region MaintenanceOrderItem Mapping

        private void MaintenanceOrderItemMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<MaintenanceOrderItem>().ToTable(@"MaintenanceOrderItem");
            modelBuilder.Entity<MaintenanceOrderItem>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<MaintenanceOrderItem>().Property<string>(x => x.MaintenanceOrderId).HasColumnName(@"MaintenanceOrderId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<MaintenanceOrderItem>().Property<iVedix.DBP.ServiceApps.Assets.Common.Enums.MaintenanceTypes>(x => x.MaintenanceType).HasColumnName(@"MaintenanceType").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<MaintenanceOrderItem>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<MaintenanceOrderItem>().Property<System.Nullable<double>>(x => x.Cost).HasColumnName(@"Cost").ValueGeneratedNever();
            modelBuilder.Entity<MaintenanceOrderItem>().Property<System.Nullable<double>>(x => x.MaintenanceTimeMins).HasColumnName(@"MaintenanceTimeMins").ValueGeneratedNever();
            modelBuilder.Entity<MaintenanceOrderItem>().HasKey(@"Id");
        }
	
        partial void CustomizeMaintenanceOrderItemMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LocationTrigger Mapping

        private void LocationTriggerMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LocationTrigger>().ToTable(@"LocationTrigger");
            modelBuilder.Entity<LocationTrigger>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTrigger>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTrigger>().Property<iVedix.DBP.ServiceApps.Assets.Common.Enums.LocationTriggerType>(x => x.TriggerType).HasColumnName(@"TriggerType").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<LocationTrigger>().Property<iVedix.DBP.ServiceApps.Assets.Common.Enums.LocationTriggerActionType>(x => x.TriggerAction).HasColumnName(@"TriggerAction").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<LocationTrigger>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.Status>>(x => x.Status).HasColumnName(@"Status").ValueGeneratedNever();
            modelBuilder.Entity<LocationTrigger>().Property<string>(x => x.State).HasColumnName(@"State").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTrigger>().Property<System.DateTime>(x => x.ChangeDate).HasColumnName(@"ChangeDate").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<LocationTrigger>().Property<string>(x => x.ChangeComment).HasColumnName(@"ChangeComment").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTrigger>().Property<bool>(x => x.Active).HasColumnName(@"Active").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<LocationTrigger>().Property<System.Nullable<iVedix.DBP.ServiceApps.Alerts.Common.AlertLevel>>(x => x.AlertLevel).HasColumnName(@"AlertLevel").ValueGeneratedNever();
            modelBuilder.Entity<LocationTrigger>().Property<string>(x => x.Message).HasColumnName(@"Message").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<LocationTrigger>().Property<string>(x => x.Tag).HasColumnName(@"Tag").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<LocationTrigger>().HasKey(@"Id");
        }
	
        partial void CustomizeLocationTriggerMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LocationTriggerAttr Mapping

        private void LocationTriggerAttrMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LocationTriggerAttr>().ToTable(@"LocationTriggerAttr");
            modelBuilder.Entity<LocationTriggerAttr>().Property<string>(x => x.LocationTriggerId).HasColumnName(@"LocationTriggerId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTriggerAttr>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTriggerAttr>().Property<string>(x => x.Value).HasColumnName(@"Value").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTriggerAttr>().HasKey(@"LocationTriggerId", @"Name");
        }
	
        partial void CustomizeLocationTriggerAttrMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Reservation Mapping

        private void ReservationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Reservation>().ToTable(@"Reservation");
            modelBuilder.Entity<Reservation>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Reservation>().Property<string>(x => x.OrderDate).HasColumnName(@"OrderDate").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Reservation>().Property<string>(x => x.OrderSource).HasColumnName(@"OrderSource").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Reservation>().Property<bool>(x => x.IsClosed).HasColumnName(@"IsClosed").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Reservation>().Property<iVedix.DBP.ServiceApps.Assets.Common.Enums.LocationSpecificationType>(x => x.SpecificationType).HasColumnName(@"SpecificationType").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Reservation>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.AssetClass>>(x => x.AssetClass).HasColumnName(@"AssetClass").ValueGeneratedNever();
            modelBuilder.Entity<Reservation>().Property<string>(x => x.Department).HasColumnName(@"Department").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Reservation>().Property<string>(x => x.AssetSpecId).HasColumnName(@"AssetSpecId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Reservation>().Property<string>(x => x.AssetState).HasColumnName(@"AssetState").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Reservation>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.Status>>(x => x.AssetStatus).HasColumnName(@"AssetStatus").ValueGeneratedNever();
            modelBuilder.Entity<Reservation>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.UsageType>>(x => x.UsageType).HasColumnName(@"UsageType").ValueGeneratedNever();
            modelBuilder.Entity<Reservation>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.LocationTriggerOperatorType>>(x => x.OperatorType).HasColumnName(@"OperatorType").ValueGeneratedNever();
            modelBuilder.Entity<Reservation>().HasKey(@"Id");
            modelBuilder.Entity<Reservation>().HasIndex(@"OrderDate").IsUnique(false);
        }
	
        partial void CustomizeReservationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ReservationAssetId Mapping

        private void ReservationAssetIdMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ReservationAssetId>().ToTable(@"ReservationAssetId");
            modelBuilder.Entity<ReservationAssetId>().Property<string>(x => x.ReservationId).HasColumnName(@"ReservationId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReservationAssetId>().Property<string>(x => x.AssetId).HasColumnName(@"AssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReservationAssetId>().HasKey(@"ReservationId", @"AssetId");
        }
	
        partial void CustomizeReservationAssetIdMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ReservationSpecAttrValue Mapping

        private void ReservationSpecAttrValueMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ReservationSpecAttrValue>().ToTable(@"ReservationSpecAttrValue");
            modelBuilder.Entity<ReservationSpecAttrValue>().Property<string>(x => x.ReservationId).HasColumnName(@"ReservationId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReservationSpecAttrValue>().Property<string>(x => x.AssetAttrName).HasColumnName(@"AssetAttrName").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReservationSpecAttrValue>().Property<string>(x => x.AssetAttrValue).HasColumnName(@"AssetAttrValue").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReservationSpecAttrValue>().HasKey(@"ReservationId", @"AssetAttrName");
        }
	
        partial void CustomizeReservationSpecAttrValueMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ReservationAttr Mapping

        private void ReservationAttrMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ReservationAttr>().ToTable(@"ReservationAttr");
            modelBuilder.Entity<ReservationAttr>().Property<string>(x => x.ReservationId).HasColumnName(@"ReservationId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReservationAttr>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReservationAttr>().Property<string>(x => x.Value).HasColumnName(@"Value").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ReservationAttr>().HasKey(@"ReservationId", @"Name");
        }
	
        partial void CustomizeReservationAttrMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LocationTriggerSpec Mapping

        private void LocationTriggerSpecMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LocationTriggerSpec>().ToTable(@"LocationTriggerSpec");
            modelBuilder.Entity<LocationTriggerSpec>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTriggerSpec>().Property<string>(x => x.LocationTriggerId).HasColumnName(@"LocationTriggerId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTriggerSpec>().Property<iVedix.DBP.ServiceApps.Assets.Common.Enums.LocationSpecificationType>(x => x.SpecType).HasColumnName(@"SpecType").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<LocationTriggerSpec>().Property<iVedix.DBP.ServiceApps.Assets.Common.Enums.LocationTriggerOperatorType>(x => x.Operator).HasColumnName(@"Operator").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<LocationTriggerSpec>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.AssetClass>>(x => x.AssetClass).HasColumnName(@"AssetClass").ValueGeneratedNever();
            modelBuilder.Entity<LocationTriggerSpec>().Property<string>(x => x.Department).HasColumnName(@"Department").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTriggerSpec>().Property<string>(x => x.AssetSpecId).HasColumnName(@"AssetSpecId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTriggerSpec>().Property<string>(x => x.AssetState).HasColumnName(@"AssetState").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTriggerSpec>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.Status>>(x => x.AssetStatus).HasColumnName(@"AssetStatus").ValueGeneratedNever();
            modelBuilder.Entity<LocationTriggerSpec>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.UsageType>>(x => x.UsageType).HasColumnName(@"UsageType").ValueGeneratedNever();
            modelBuilder.Entity<LocationTriggerSpec>().HasKey(@"Id");
            modelBuilder.Entity<LocationTriggerSpec>().HasIndex(@"LocationTriggerId").IsUnique(false);
        }
	
        partial void CustomizeLocationTriggerSpecMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LocationTriggerSpecAttr Mapping

        private void LocationTriggerSpecAttrMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LocationTriggerSpecAttr>().ToTable(@"LocationTriggerSpecAttr");
            modelBuilder.Entity<LocationTriggerSpecAttr>().Property<string>(x => x.LocationTriggerSpecId).HasColumnName(@"LocationTriggerSpecId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTriggerSpecAttr>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTriggerSpecAttr>().Property<string>(x => x.Value).HasColumnName(@"Value").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocationTriggerSpecAttr>().HasKey(@"LocationTriggerSpecId", @"Name");
            modelBuilder.Entity<LocationTriggerSpecAttr>().HasIndex(@"LocationTriggerSpecId").IsUnique(false);
        }
	
        partial void CustomizeLocationTriggerSpecAttrMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetMoveHistory Mapping

        private void AssetMoveHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetMoveHistory>().ToTable(@"AssetMoveHistory");
            modelBuilder.Entity<AssetMoveHistory>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetMoveHistory>().Property<string>(x => x.AssetId).HasColumnName(@"AssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetMoveHistory>().Property<System.DateTime>(x => x.ActivityTimestamp).HasColumnName(@"ActivityTimestamp").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetMoveHistory>().Property<string>(x => x.FromLocationId).HasColumnName(@"FromLocationId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetMoveHistory>().Property<string>(x => x.FromLocationName).HasColumnName(@"FromLocationName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetMoveHistory>().Property<string>(x => x.ToLocationId).HasColumnName(@"ToLocationId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetMoveHistory>().Property<string>(x => x.ToLocationName).HasColumnName(@"ToLocationName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetMoveHistory>().Property<string>(x => x.Source).HasColumnName(@"Source").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetMoveHistory>().Property<string>(x => x.User).HasColumnName(@"User").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetMoveHistory>().HasKey(@"Id");
            modelBuilder.Entity<AssetMoveHistory>().HasIndex(@"AssetId").IsUnique(false);
            modelBuilder.Entity<AssetMoveHistory>().HasIndex(@"ActivityTimestamp").IsUnique(false);
            modelBuilder.Entity<AssetMoveHistory>().HasIndex(@"FromLocationId").IsUnique(false);
            modelBuilder.Entity<AssetMoveHistory>().HasIndex(@"FromLocationName").IsUnique(false);
            modelBuilder.Entity<AssetMoveHistory>().HasIndex(@"ToLocationId").IsUnique(false);
            modelBuilder.Entity<AssetMoveHistory>().HasIndex(@"ToLocationName").IsUnique(false);
            modelBuilder.Entity<AssetMoveHistory>().HasIndex(@"User").IsUnique(false);
        }
	
        partial void CustomizeAssetMoveHistoryMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region RaisedAlert Mapping

        private void RaisedAlertMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<RaisedAlert>().ToTable(@"RaisedAlert");
            modelBuilder.Entity<RaisedAlert>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<RaisedAlert>().Property<System.Nullable<System.DateTime>>(x => x.RaisedTime).HasColumnName(@"RaisedTime").ValueGeneratedNever();
            modelBuilder.Entity<RaisedAlert>().Property<string>(x => x.AlertTriggerName).HasColumnName(@"AlertTriggerName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<RaisedAlert>().Property<string>(x => x.Tag).HasColumnName(@"Tag").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<RaisedAlert>().Property<string>(x => x.Message).HasColumnName(@"Message").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<RaisedAlert>().Property<bool>(x => x.Acknowledged).HasColumnName(@"Acknowledged").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<RaisedAlert>().Property<string>(x => x.AcknowledgedBy).HasColumnName(@"AcknowledgedBy").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<RaisedAlert>().Property<System.Nullable<System.DateTime>>(x => x.AcknowledgedTime).HasColumnName(@"AcknowledgedTime").ValueGeneratedNever();
            modelBuilder.Entity<RaisedAlert>().Property<System.Nullable<iVedix.DBP.ServiceApps.Alerts.Common.AlertCategory>>(x => x.Category).HasColumnName(@"Category").ValueGeneratedNever();
            modelBuilder.Entity<RaisedAlert>().Property<iVedix.DBP.ServiceApps.Alerts.Common.AlertLevel>(x => x.Level).HasColumnName(@"Level").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<RaisedAlert>().Property<System.Nullable<System.DateTime>>(x => x.LastUpdatedTime).HasColumnName(@"LastUpdatedTime").ValueGeneratedNever();
            modelBuilder.Entity<RaisedAlert>().Property<string>(x => x.HashValue).HasColumnName(@"HashValue").ValueGeneratedNever().HasMaxLength(150);
            modelBuilder.Entity<RaisedAlert>().HasKey(@"Id");
            modelBuilder.Entity<RaisedAlert>().HasIndex(@"RaisedTime").IsUnique(false);
            modelBuilder.Entity<RaisedAlert>().HasIndex(@"Tag").IsUnique(false);
            modelBuilder.Entity<RaisedAlert>().HasIndex(@"AcknowledgedBy").IsUnique(false);
            modelBuilder.Entity<RaisedAlert>().HasIndex(@"AcknowledgedTime").IsUnique(false);
            modelBuilder.Entity<RaisedAlert>().HasIndex(@"Category").IsUnique(false);
            modelBuilder.Entity<RaisedAlert>().HasIndex(@"Level").IsUnique(false);
            modelBuilder.Entity<RaisedAlert>().HasIndex(@"HashValue").IsUnique(false);
        }
	
        partial void CustomizeRaisedAlertMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region RaisedAlertData Mapping

        private void RaisedAlertDataMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<RaisedAlertData>().ToTable(@"RaisedAlertData");
            modelBuilder.Entity<RaisedAlertData>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<RaisedAlertData>().Property<string>(x => x.RaisedAlertId).HasColumnName(@"RaisedAlertId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<RaisedAlertData>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<RaisedAlertData>().Property<string>(x => x.Value).HasColumnName(@"Value").IsRequired().ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<RaisedAlertData>().HasKey(@"Id");
            modelBuilder.Entity<RaisedAlertData>().HasIndex(@"RaisedAlertId").IsUnique(false);
        }
	
        partial void CustomizeRaisedAlertDataMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AlertTrigger Mapping

        private void AlertTriggerMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AlertTrigger>().ToTable(@"AlertTrigger");
            modelBuilder.Entity<AlertTrigger>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AlertTrigger>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AlertTrigger>().Property<bool>(x => x.IsEnabled).HasColumnName(@"IsEnabled").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AlertTrigger>().Property<string>(x => x.EventName).HasColumnName(@"EventName").IsRequired().ValueGeneratedNever().HasMaxLength(300);
            modelBuilder.Entity<AlertTrigger>().Property<System.DateTime>(x => x.LastModified).HasColumnName(@"LastModified").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AlertTrigger>().Property<string>(x => x.Message).HasColumnName(@"Message").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<AlertTrigger>().Property<string>(x => x.Tag).HasColumnName(@"Tag").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AlertTrigger>().Property<System.Nullable<iVedix.DBP.ServiceApps.Alerts.Common.AlertLevel>>(x => x.Level).HasColumnName(@"Level").ValueGeneratedNever();
            modelBuilder.Entity<AlertTrigger>().HasKey(@"Id");
            modelBuilder.Entity<AlertTrigger>().HasIndex(@"Name").IsUnique(false);
            modelBuilder.Entity<AlertTrigger>().HasIndex(@"EventName").IsUnique(false);
        }
	
        partial void CustomizeAlertTriggerMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region LocTriggerLocation Mapping

        private void LocTriggerLocationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<LocTriggerLocation>().ToTable(@"LocTriggerLocation");
            modelBuilder.Entity<LocTriggerLocation>().Property<string>(x => x.LocationTriggerId).HasColumnName(@"LocationTriggerId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocTriggerLocation>().Property<string>(x => x.LocationId).HasColumnName(@"LocationId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<LocTriggerLocation>().HasKey(@"LocationTriggerId", @"LocationId");
            modelBuilder.Entity<LocTriggerLocation>().HasIndex(@"LocationId").IsUnique(false);
        }
	
        partial void CustomizeLocTriggerLocationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetTag Mapping

        private void AssetTagMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetTag>().ToTable(@"AssetTag");
            modelBuilder.Entity<AssetTag>().Property<string>(x => x.AssetId).HasColumnName(@"AssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetTag>().Property<string>(x => x.TagId).HasColumnName(@"TagId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetTag>().Property<string>(x => x.ExternalId).HasColumnName(@"ExternalId").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<AssetTag>().HasKey(@"AssetId", @"TagId", @"ExternalId");
            modelBuilder.Entity<AssetTag>().HasIndex(@"AssetId").IsUnique(false);
            modelBuilder.Entity<AssetTag>().HasIndex(@"TagId").IsUnique(false);
            modelBuilder.Entity<AssetTag>().HasIndex(@"ExternalId").IsUnique(false);
        }
	
        partial void CustomizeAssetTagMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region IotLocation Mapping

        private void IotLocationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<IotLocation>().ToTable(@"IotLocation");
            modelBuilder.Entity<IotLocation>().Property<string>(x => x.LocationId).HasColumnName(@"LocationId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<IotLocation>().Property<string>(x => x.IotLocationId).HasColumnName(@"IotLocationId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<IotLocation>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<IotLocation>().HasKey(@"LocationId", @"IotLocationId");
            modelBuilder.Entity<IotLocation>().HasIndex(@"IotLocationId").IsUnique(false);
        }
	
        partial void CustomizeIotLocationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetFormat Mapping

        private void AssetFormatMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetFormat>().ToTable(@"AssetFormat");
            modelBuilder.Entity<AssetFormat>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetFormat>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetFormat>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<AssetFormat>().HasKey(@"Id");
        }
	
        partial void CustomizeAssetFormatMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetLevels Mapping

        private void AssetLevelsMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetLevels>().ToTable(@"AssetLevels");
            modelBuilder.Entity<AssetLevels>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetLevels>().Property<string>(x => x.LocationId).HasColumnName(@"LocationId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetLevels>().Property<string>(x => x.AssetFormatId).HasColumnName(@"AssetFormatId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetLevels>().Property<string>(x => x.AssetFormatName).HasColumnName(@"AssetFormatName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetLevels>().Property<int>(x => x.Qty).HasColumnName(@"Qty").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetLevels>().HasKey(@"Id");
            modelBuilder.Entity<AssetLevels>().HasIndex(@"LocationId").IsUnique(false);
            modelBuilder.Entity<AssetLevels>().HasIndex(@"AssetFormatId").IsUnique(false);
        }
	
        partial void CustomizeAssetLevelsMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetAlertTrigger Mapping

        private void AssetAlertTriggerMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetAlertTrigger>().ToTable(@"AssetAlertTrigger");
            modelBuilder.Entity<AssetAlertTrigger>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAlertTrigger>().Property<string>(x => x.Name).HasColumnName(@"Name").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAlertTrigger>().Property<bool>(x => x.Active).HasColumnName(@"Active").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetAlertTrigger>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.AssetAlertTriggerType>>(x => x.TriggerType).HasColumnName(@"TriggerType").ValueGeneratedNever();
            modelBuilder.Entity<AssetAlertTrigger>().Property<string>(x => x.Tag).HasColumnName(@"Tag").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<AssetAlertTrigger>().Property<string>(x => x.Message).HasColumnName(@"Message").ValueGeneratedNever().HasMaxLength(500);
            modelBuilder.Entity<AssetAlertTrigger>().Property<iVedix.DBP.ServiceApps.Alerts.Common.AlertLevel>(x => x.AlertLevel).HasColumnName(@"AlertLevel").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetAlertTrigger>().HasKey(@"Id");
            modelBuilder.Entity<AssetAlertTrigger>().HasIndex(@"Name").IsUnique(false);
            modelBuilder.Entity<AssetAlertTrigger>().HasIndex(@"Tag").IsUnique(false);
            modelBuilder.Entity<AssetAlertTrigger>().HasIndex(@"AlertLevel").IsUnique(false);
        }
	
        partial void CustomizeAssetAlertTriggerMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetAlertTriggerLocationId Mapping

        private void AssetAlertTriggerLocationIdMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetAlertTriggerLocationId>().ToTable(@"AssetAlertTriggerLocationId");
            modelBuilder.Entity<AssetAlertTriggerLocationId>().Property<string>(x => x.AssetAlertTriggerId).HasColumnName(@"AssetAlertTriggerId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAlertTriggerLocationId>().Property<string>(x => x.LocationId).HasColumnName(@"LocationId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAlertTriggerLocationId>().HasKey(@"AssetAlertTriggerId", @"LocationId");
        }
	
        partial void CustomizeAssetAlertTriggerLocationIdMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetAlertTriggerFormat Mapping

        private void AssetAlertTriggerFormatMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetAlertTriggerFormat>().ToTable(@"AssetAlertTriggerFormat");
            modelBuilder.Entity<AssetAlertTriggerFormat>().Property<string>(x => x.AssetAlertTriggerId).HasColumnName(@"AssetAlertTriggerId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAlertTriggerFormat>().Property<string>(x => x.AssetFormatId).HasColumnName(@"AssetFormatId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAlertTriggerFormat>().Property<string>(x => x.AssetFormatName).HasColumnName(@"AssetFormatName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAlertTriggerFormat>().HasKey(@"AssetAlertTriggerId", @"AssetFormatId");
        }
	
        partial void CustomizeAssetAlertTriggerFormatMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetAlertTriggerSpecification Mapping

        private void AssetAlertTriggerSpecificationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetAlertTriggerSpecification>().ToTable(@"AssetAlertTriggerSpecification");
            modelBuilder.Entity<AssetAlertTriggerSpecification>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAlertTriggerSpecification>().Property<string>(x => x.AssetAlertTriggerId).HasColumnName(@"AssetAlertTriggerId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetAlertTriggerSpecification>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.AssetAlertTriggerSpecificationType>>(x => x.SpecificationType).HasColumnName(@"SpecificationType").ValueGeneratedNever();
            modelBuilder.Entity<AssetAlertTriggerSpecification>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.AssetAlertTriggerOperatorType>>(x => x.OperatorType).HasColumnName(@"OperatorType").ValueGeneratedNever();
            modelBuilder.Entity<AssetAlertTriggerSpecification>().Property<int>(x => x.InventoryLevel).HasColumnName(@"InventoryLevel").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetAlertTriggerSpecification>().Property<int>(x => x.DwellDaysSinceMoved).HasColumnName(@"DwellDaysSinceMoved").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetAlertTriggerSpecification>().HasKey(@"Id");
            modelBuilder.Entity<AssetAlertTriggerSpecification>().HasIndex(@"AssetAlertTriggerId").IsUnique(false);
            modelBuilder.Entity<AssetAlertTriggerSpecification>().HasIndex(@"SpecificationType").IsUnique(false);
        }
	
        partial void CustomizeAssetAlertTriggerSpecificationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetOrder Mapping

        private void AssetOrderMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetOrder>().ToTable(@"AssetOrder");
            modelBuilder.Entity<AssetOrder>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetOrder>().Property<iVedix.DBP.ServiceApps.Assets.Common.Enums.OrderType>(x => x.Type).HasColumnName(@"Type").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetOrder>().Property<iVedix.DBP.ServiceApps.Assets.Common.Enums.OrderState>(x => x.State).HasColumnName(@"State").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetOrder>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.Status>>(x => x.TargetStatus).HasColumnName(@"TargetStatus").ValueGeneratedNever();
            modelBuilder.Entity<AssetOrder>().Property<string>(x => x.SourceId).HasColumnName(@"SourceId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetOrder>().Property<System.DateTime>(x => x.CreatedDateUTC).HasColumnName(@"CreatedDateUTC").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetOrder>().Property<System.Nullable<System.DateTime>>(x => x.ClosedDateUTC).HasColumnName(@"ClosedDateUTC").ValueGeneratedNever();
            modelBuilder.Entity<AssetOrder>().Property<System.Nullable<System.DateTime>>(x => x.LastUpdatedDateUTC).HasColumnName(@"LastUpdatedDateUTC").ValueGeneratedNever();
            modelBuilder.Entity<AssetOrder>().Property<string>(x => x.LastUpdatedByUser).HasColumnName(@"LastUpdatedByUser").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetOrder>().Property<string>(x => x.CustomerId).HasColumnName(@"CustomerId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetOrder>().Property<string>(x => x.CustNo).HasColumnName(@"CustNo").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetOrder>().Property<System.Nullable<System.DateTime>>(x => x.DueDate).HasColumnName(@"DueDate").ValueGeneratedNever();
            modelBuilder.Entity<AssetOrder>().Property<int>(x => x.OrderQty).HasColumnName(@"OrderQty").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetOrder>().Property<int>(x => x.CurrentQty).HasColumnName(@"CurrentQty").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetOrder>().HasKey(@"Id");
            modelBuilder.Entity<AssetOrder>().HasIndex(@"Type").IsUnique(false);
            modelBuilder.Entity<AssetOrder>().HasIndex(@"State").IsUnique(false);
            modelBuilder.Entity<AssetOrder>().HasIndex(@"TargetStatus").IsUnique(false);
            modelBuilder.Entity<AssetOrder>().HasIndex(@"ClosedDateUTC").IsUnique(false);
        }
	
        partial void CustomizeAssetOrderMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetTransfer Mapping

        private void AssetTransferMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetTransfer>().ToTable(@"AssetTransfer");
            modelBuilder.Entity<AssetTransfer>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetTransfer>().Property<string>(x => x.AssetOrderId).HasColumnName(@"AssetOrderId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetTransfer>().Property<string>(x => x.AssetId).HasColumnName(@"AssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetTransfer>().Property<string>(x => x.AssetName).HasColumnName(@"AssetName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetTransfer>().Property<string>(x => x.TargetLocationId).HasColumnName(@"TargetLocationId").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetTransfer>().Property<string>(x => x.TargetLocationName).HasColumnName(@"TargetLocationName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetTransfer>().Property<System.DateTime>(x => x.CreatedDateUTC).HasColumnName(@"CreatedDateUTC").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetTransfer>().Property<string>(x => x.CreatedByUser).HasColumnName(@"CreatedByUser").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetTransfer>().Property<System.Nullable<System.DateTime>>(x => x.ConfirmedDateUTC).HasColumnName(@"ConfirmedDateUTC").ValueGeneratedNever();
            modelBuilder.Entity<AssetTransfer>().Property<System.Nullable<System.DateTime>>(x => x.LastUpdatedDateUTC).HasColumnName(@"LastUpdatedDateUTC").ValueGeneratedNever();
            modelBuilder.Entity<AssetTransfer>().Property<string>(x => x.LastUpdatedByUser).HasColumnName(@"LastUpdatedByUser").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetTransfer>().Property<string>(x => x.TargetState).HasColumnName(@"TargetState").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetTransfer>().Property<System.Nullable<iVedix.DBP.ServiceApps.Assets.Common.Enums.Status>>(x => x.TargetStatus).HasColumnName(@"TargetStatus").ValueGeneratedNever();
            modelBuilder.Entity<AssetTransfer>().HasKey(@"Id");
            modelBuilder.Entity<AssetTransfer>().HasIndex(@"AssetOrderId").IsUnique(false);
            modelBuilder.Entity<AssetTransfer>().HasIndex(@"AssetId").IsUnique(false);
            modelBuilder.Entity<AssetTransfer>().HasIndex(@"AssetName").IsUnique(false);
            modelBuilder.Entity<AssetTransfer>().HasIndex(@"TargetLocationName").IsUnique(false);
            modelBuilder.Entity<AssetTransfer>().HasIndex(@"ConfirmedDateUTC").IsUnique(false);
        }
	
        partial void CustomizeAssetTransferMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region Customer Mapping

        private void CustomerMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Customer>().ToTable(@"Customer");
            modelBuilder.Entity<Customer>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Customer>().Property<string>(x => x.CustNo).HasColumnName(@"CustNo").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Customer>().Property<string>(x => x.Name).HasColumnName(@"Name").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Customer>().HasKey(@"Id");
        }
	
        partial void CustomizeCustomerMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region ChildAsset Mapping

        private void ChildAssetMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ChildAsset>().ToTable(@"ChildAsset");
            modelBuilder.Entity<ChildAsset>().Property<string>(x => x.AssetId).HasColumnName(@"AssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ChildAsset>().Property<string>(x => x.ChildAssetId).HasColumnName(@"ChildAssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ChildAsset>().Property<string>(x => x.AssetName).HasColumnName(@"AssetName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ChildAsset>().Property<string>(x => x.ChildAssetName).HasColumnName(@"ChildAssetName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<ChildAsset>().HasKey(@"AssetId", @"ChildAssetId");
        }
	
        partial void CustomizeChildAssetMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetGroupMaster Mapping

        private void AssetGroupMasterMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetGroupMaster>().ToTable(@"AssetGroupMaster");
            modelBuilder.Entity<AssetGroupMaster>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetGroupMaster>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetGroupMaster>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetGroupMaster>().HasKey(@"Id");
        }
	
        partial void CustomizeAssetGroupMasterMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetGroup Mapping

        private void AssetGroupMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetGroup>().ToTable(@"AssetGroup");
            modelBuilder.Entity<AssetGroup>().Property<string>(x => x.AssetId).HasColumnName(@"AssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetGroup>().Property<string>(x => x.GroupId).HasColumnName(@"GroupId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetGroup>().Property<string>(x => x.GroupName).HasColumnName(@"GroupName").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetGroup>().HasKey(@"AssetId", @"GroupId");
            modelBuilder.Entity<AssetGroup>().HasIndex(@"GroupId").IsUnique(false);
        }
	
        partial void CustomizeAssetGroupMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetConfiguration Mapping

        private void AssetConfigurationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetConfiguration>().ToTable(@"AssetConfiguration");
            modelBuilder.Entity<AssetConfiguration>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetConfiguration>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetConfiguration>().Property<string>(x => x.Description).HasColumnName(@"Description").ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<AssetConfiguration>().HasKey(@"Id");
        }
	
        partial void CustomizeAssetConfigurationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region CustomStorageSchema Mapping

        private void CustomStorageSchemaMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CustomStorageSchema>().ToTable(@"CustomStorageSchema");
            modelBuilder.Entity<CustomStorageSchema>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<CustomStorageSchema>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<CustomStorageSchema>().HasKey(@"Id");
        }
	
        partial void CustomizeCustomStorageSchemaMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region CustomStorageSchemaColumn Mapping

        private void CustomStorageSchemaColumnMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CustomStorageSchemaColumn>().ToTable(@"CustomStorageSchemaColumn");
            modelBuilder.Entity<CustomStorageSchemaColumn>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<CustomStorageSchemaColumn>().Property<string>(x => x.CustomStorageSchemaId).HasColumnName(@"CustomStorageSchemaId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<CustomStorageSchemaColumn>().Property<iVedix.DBP.CustomStorage.Common.DataType>(x => x.DataType).HasColumnName(@"DataType").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<CustomStorageSchemaColumn>().Property<bool>(x => x.IsRowId).HasColumnName(@"IsRowId").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<CustomStorageSchemaColumn>().Property<bool>(x => x.IsPartitionKey).HasColumnName(@"IsPartitionKey").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<CustomStorageSchemaColumn>().Property<string>(x => x.Name).HasColumnName(@"Name").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<CustomStorageSchemaColumn>().HasKey(@"Id");
            modelBuilder.Entity<CustomStorageSchemaColumn>().HasIndex(@"CustomStorageSchemaId").IsUnique(false);
        }
	
        partial void CustomizeCustomStorageSchemaColumnMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetStatusCorrelation Mapping

        private void AssetStatusCorrelationMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetStatusCorrelation>().ToTable(@"AssetStatusCorrelation");
            modelBuilder.Entity<AssetStatusCorrelation>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStatusCorrelation>().Property<iVedix.DBP.ServiceApps.Assets.Common.Enums.Status>(x => x.AssetStatus).HasColumnName(@"AssetStatus").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetStatusCorrelation>().HasKey(@"Id");
        }
	
        partial void CustomizeAssetStatusCorrelationMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetStatusCorrelationState Mapping

        private void AssetStatusCorrelationStateMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetStatusCorrelationState>().ToTable(@"AssetStatusCorrelationState");
            modelBuilder.Entity<AssetStatusCorrelationState>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStatusCorrelationState>().Property<string>(x => x.AssetStatusCorrelationId).HasColumnName(@"AssetStatusCorrelationId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStatusCorrelationState>().Property<string>(x => x.AssetStateName).HasColumnName(@"AssetStateName").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetStatusCorrelationState>().HasKey(@"Id");
        }
	
        partial void CustomizeAssetStatusCorrelationStateMapping(ModelBuilder modelBuilder);

        #endregion
    
        #region AssetCertificationHistory Mapping

        private void AssetCertificationHistoryMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AssetCertificationHistory>().ToTable(@"AssetCertificationHistory");
            modelBuilder.Entity<AssetCertificationHistory>().Property<string>(x => x.Id).HasColumnName(@"Id").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetCertificationHistory>().Property<string>(x => x.AssetId).HasColumnName(@"AssetId").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetCertificationHistory>().Property<System.Nullable<System.DateTime>>(x => x.CertificationDateUTC).HasColumnName(@"CertificationDateUTC").ValueGeneratedNever();
            modelBuilder.Entity<AssetCertificationHistory>().Property<System.Nullable<System.DateTime>>(x => x.ExpirationDateUTC).HasColumnName(@"ExpirationDateUTC").ValueGeneratedNever();
            modelBuilder.Entity<AssetCertificationHistory>().Property<int>(x => x.DurationDays).HasColumnName(@"DurationDays").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<AssetCertificationHistory>().Property<string>(x => x.Source).HasColumnName(@"Source").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetCertificationHistory>().Property<string>(x => x.User).HasColumnName(@"User").ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<AssetCertificationHistory>().Property<System.Nullable<System.DateTime>>(x => x.EnteredDateUTC).HasColumnName(@"EnteredDateUTC").ValueGeneratedNever();
            modelBuilder.Entity<AssetCertificationHistory>().HasKey(@"Id");
            modelBuilder.Entity<AssetCertificationHistory>().HasIndex(@"AssetId").IsUnique(false);
            modelBuilder.Entity<AssetCertificationHistory>().HasIndex(@"CertificationDateUTC").IsUnique(false);
        }
	
        partial void CustomizeAssetCertificationHistoryMapping(ModelBuilder modelBuilder);

        #endregion

        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {

        #region Asset Navigation properties

            modelBuilder.Entity<Asset>().HasMany(x => x.ChildAssets).WithOne().HasForeignKey(@"ParentId");

        #endregion

        #region ReportSpec Navigation properties

            modelBuilder.Entity<ReportSpec>().HasMany(x => x.Columns).WithOne().IsRequired(true).HasForeignKey(@"ReportSpecId");
            modelBuilder.Entity<ReportSpec>().HasMany(x => x.Reports).WithOne().IsRequired(true).HasForeignKey(@"ReportSpecId");
            modelBuilder.Entity<ReportSpec>().HasMany(x => x.Filters).WithOne().IsRequired(true).HasForeignKey(@"ReportSpecId");

        #endregion

        #region ReportSpecColumn Navigation properties


        #endregion

        #region AreaLocationMap Navigation properties

            modelBuilder.Entity<AreaLocationMap>().HasMany(x => x.MapPoints).WithOne().IsRequired(true).HasForeignKey(@"AreaLocationMapId");

        #endregion

        #region MapPoint Navigation properties


        #endregion

        #region Report Navigation properties

            modelBuilder.Entity<Report>().HasMany(x => x.Columns).WithOne().IsRequired(true).HasForeignKey(@"ReportId");
            modelBuilder.Entity<Report>().HasOne(x => x.FilterSet).WithOne().IsRequired(true).HasForeignKey(typeof(ReportFilterSet), @"Id");

        #endregion

        #region ReportColumn Navigation properties

            modelBuilder.Entity<ReportColumn>().HasOne(x => x.ReportSpecColumn).WithMany().OnDelete(DeleteBehavior.Restrict).IsRequired(true).HasForeignKey(@"ReportSpecColumnId");

        #endregion

        #region ReportFilter Navigation properties

            modelBuilder.Entity<ReportFilter>().HasOne(x => x.ReportSpecFilter).WithMany(op => op.ReportFilters).OnDelete(DeleteBehavior.Restrict).IsRequired(true).HasForeignKey(@"ReportSpecFilterId");

        #endregion

        #region ReportFilterSet Navigation properties

            modelBuilder.Entity<ReportFilterSet>().HasMany(x => x.Filters).WithOne().IsRequired(true).HasForeignKey(@"ReportFilterSetId");

        #endregion

        #region ReportSpecFilter Navigation properties

            modelBuilder.Entity<ReportSpecFilter>().HasMany(x => x.ReportFilters).WithOne(op => op.ReportSpecFilter).OnDelete(DeleteBehavior.Restrict).IsRequired(true).HasForeignKey(@"ReportSpecFilterId");

        #endregion
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();
    }
}
