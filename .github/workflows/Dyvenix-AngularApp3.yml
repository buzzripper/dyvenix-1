name: Build and deploy Angular
on:
  workflow_dispatch:
  push:
    branches:
    - main

env:
  AZURE_WEBAPP_NAME: dyvenix-app1
  AZURE_WEBAPP_PACKAGE_PATH: app1.server/publish
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 9.0.x
  WORKING_DIRECTORY: app1.server
  CLIENT_WORKING_DIRECTORY: app1.client
  CLIENT_OUTPUT_PATH: dist
  # CLIENT_DEPLOYPKG_PATH: app1.client.zip

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
  
    # Dotnet

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"

    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Test
      run: dotnet test "${{ env.WORKING_DIRECTORY }}" --no-build

    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"

    # Angular
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18  # Ensure it matches your Angular project's Node version

    - name: Install dependencies
      working-directory: ${{ env.CLIENT_WORKING_DIRECTORY }}
      run: npm ci

    - name: Build Angular app
      working-directory: ${{ env.CLIENT_WORKING_DIRECTORY }}
      run: npm run build -- --configuration=production --output-path=${{ env.CLIENT_OUTPUT_PATH }}

    - name: Move browser folder contents up
      working-directory: ${{ env.CLIENT_WORKING_DIRECTORY }}
      run: mv ${{ env.CLIENT_OUTPUT_PATH }}/browser/* ${{ env.CLIENT_OUTPUT_PATH }}/

    - name: Move angular output to wwwroot
      working-directory: ${{ env.CLIENT_WORKING_DIRECTORY }}
      run: | 
        mkdir ../${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/wwwroot/
        mv ${{ env.CLIENT_OUTPUT_PATH }}/* ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/wwwroot/

    - name: Publish Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: webapp
        path: ${{ env.CLIENT_WORKING_DIRECTORY }}/${{ env.CLIENT_OUTPUT_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:

    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: webapp
        path: ${{ env.CLIENT_OUTPUT_PATH }}

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.dyvenix_app1_SPN }}

    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.CLIENT_OUTPUT_PATH }}
